{
	"credit": "Made with Blockbench",
	"textureSize": [128, 128],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"right_arm.rx": "right_arm.rx-sin(swing_progress)*2",
					"left_arm.rx": "  left_arm.rx-sin(swing_progress)*2",
					"var.charge_r": "if(right_arm.rx<torad(-90) && ( left_arm.rx-(right_leg.rx/1.4))>torad(-90), 1, 0)",
					"var.charge_l": "if( left_arm.rx<torad(-90) && (right_arm.rx-( left_leg.rx/1.4))>torad(-90), 1, 0)",
					"var.look": "(0.5-0.5*cos( clamp(-4.5 +cos((age+limb_swing)/80)*6, 0, 1)*pi ))",
					"var.r": "random(id)*pi*4",
					"var.ls": "limb_swing/if(is_child, 2.4, 1.6)",
					"var.b": "var.r +age/10",
					"var.sniff": "clamp((0.9 +sin((var.r+age)/3 +sin((var.r+age)/5*2)/2) )/1.5, 0, 1)*clamp(-head_pitch +clamp(-1.5 +sin(age/10+var.r+limb_swing/4)*4 -cos(age/23+var.r+limb_swing/4)*4, 0, 1), -1, 1)",
					"var.Lear": "clamp( cos(          var.r +age/1.2/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/1.2/(20*12) )*8 -5 , 0 , 1 ) )",
					"var.Rear": "clamp( cos( pi/1.52 +var.r +age/1.2/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/1.2/(15*12) )*8 -5 , 0 , 1 ) )",
					"var.fps": "0.5"
				},
				{
					"head.rx": "torad(head_pitch) -sin(pi*2*swing_progress)/5 +if(var.charge_r==1||var.charge_l==1, torad(-5), 0) +clamp(torad(var.hy)/4, 0, torad(90)) +clamp(-torad(var.hy)/4, 0, torad(90)) +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.ry": "torad(var.hy)/1.2 +if(var.charge_l==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(           var.r+age/10 +sin(torad(45)+var.r*2+age/5)/2)/3 *var.look",
					"head.rz": "torad(var.hy)/4   +if(var.charge_l==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(torad(-45)+var.r+age/10 +sin(          var.r*2+age/5)/2)/10*var.look +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "if(var.charge_r==1, 1 +sin(pi*swing_progress), var.charge_l==1, -1 -sin(pi*swing_progress), sin(pi*swing_progress)) +if(is_riding, 0.5, clamp( 0.7-limb_speed*2,  0, 0.7)*if(var.charge_r==1||var.charge_l==1, 0, 1)) +sin(torad( 45)+limb_swing/1.6     )  *clamp(limb_speed*1.5, 0, 1)/1.2",
					"head.ty": " 0.8 +sin(var.b)/2 +sin(pi*swing_progress)*2 +if(is_riding, -1, 0) +sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
					"head.tz": "-1.5 -sin(var.b)/2 -sin(pi*swing_progress)   +if(var.charge_r==1||var.charge_l==1, 2, -1) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.rx": "torad(10) +sin(var.b)/20                                                                +if(var.charge_r==1||                                      var.charge_l==1, torad(-10) +sin(pi*swing_progress)/2,  sin(pi*swing_progress)/3) -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.ry": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-15)+limb_speed, torad(-15), 0)) +if(var.charge_r==1, torad( 25) -sin(pi*swing_progress)  , var.charge_l==1, torad(-25) +sin(pi*swing_progress)  , -sin(pi*swing_progress)/3) -sin(limb_swing/1.6)/3 *clamp(limb_speed*1.5, 0, 1)/1.2 +torad(var.hy)/6",
					"body.rz": "head.rz                                                                                               +if(var.charge_r==1, torad( 5 ) -sin(pi*swing_progress)/9, var.charge_l==1, torad(-5 ) +sin(pi*swing_progress)/9, -sin(pi*swing_progress)/6) +sin(limb_swing/1.6)/10*clamp(limb_speed*1.5, 0, 1)/1.2 -torad(var.hy)/4 -sin(torad(-45)+var.r+age/10 +sin(var.r*2+age/5)/2)/10*var.look -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.tx": "head.tx",
					"body.ty": "head.ty -(sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)) +sin(torad(160)+limb_swing/1.6*2 -cos(torad(160)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
					"body.tz": "head.tz +if(var.charge_r==1||var.charge_l==1, 0, 1)"
				},
				{
					"right_arm.rx": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-20)+limb_speed, torad(-20), 0)) +if(var.charge_r==1, torad(-120) +torad(-25)*limb_speed -torad(var.hy)/2 -sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(var.charge_l==1, torad(-45), 0),     -sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) +torad(var.hy)/8 +if(var.charge_r==1||var.charge_l==1, (sin(pi*swing_progress)*if(var.charge_r==1, 2, 1)), -sin(pi*swing_progress*2)) +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.rx": " if(var.charge_r==1||var.charge_l==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( var.charge_l==1, torad(-120) +torad(-25)*limb_speed -torad(var.hy)/2 +sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(var.charge_l==1, 0, torad(-45)),      sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) -torad(var.hy)/8 +if(var.charge_r==1||var.charge_l==1, (sin(pi*swing_progress)*if(var.charge_r==1, 1, 2)),  sin(pi*swing_progress  )) +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_arm.ry": "if(var.charge_r==1||var.charge_l==1, 0, clamp(torad(-25)+limb_speed, torad(-25), 0)) +if(var.charge_r==1, torad( 10 ) +torad( 25)*limb_speed +torad(var.hy)/1.5, if( var.charge_l==1, torad(-30),             if(is_riding, if(var.charge_l==1, 0, torad( 30)), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(var.b+torad(90))/10 -(sin(pi/2*swing_progress*2)/2)*if(var.charge_r==1, clamp(limb_speed*2, 1, 2), 1)",
					"left_arm.ry": " if(var.charge_r==1||var.charge_l==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( var.charge_l==1, torad(-10 ) +torad(-25)*limb_speed +torad(var.hy)/1.5, if(var.charge_r==1, torad( 30),             if(is_riding, if(var.charge_l==1, torad( 30), 0), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(var.b-torad(90))/10 +(sin(pi/2*swing_progress*2)/2)*if(var.charge_r==1, 1, clamp(limb_speed*2, 1, 2))",
					"right_arm.rz": "torad( 10) +if(var.charge_r==1, torad(-30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) -torad(head_pitch)/14 +if(var.charge_l==1, -(sin(pi*swing_progress  )/2), -(sin(pi*swing_progress*2)/4)) -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.rz": " torad(-10) +if( var.charge_l==1, torad( 30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) +torad(head_pitch)/14 +if(var.charge_l==1, -(sin(pi*swing_progress*2)/4), -(sin(pi*swing_progress  )/2)) +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_arm.tx": "-5 +body.tx +if(var.charge_r==1, -1,  var.charge_l==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 +limb_speed, 0) +sin(pi*swing_progress)*if(var.charge_r==1||var.charge_l==1, 2, 0)",
					"left_arm.tx": "  5 +body.tx +if( var.charge_l==1,  1, var.charge_r==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 -limb_speed, 0) -sin(pi*swing_progress)*if(var.charge_r==1||var.charge_l==1, 2, 0)",
					"right_arm.ty": "2 +body.ty +sin(var.b-torad(60))/3 +if(var.charge_r==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(var.charge_r==1||var.charge_l==1, sin(pi*swing_progress), 0)",
					"left_arm.ty": " 2 +body.ty +sin(var.b-torad(60))/3 +if( var.charge_l==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(var.charge_r==1||var.charge_l==1, sin(pi*swing_progress), 0)",
					"right_arm.tz": "-1 +clamp(-1+limb_speed*3, -1, 0) -sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(var.b)/2 +torad(var.hy) +if(var.charge_r==1,  2 -sin(pi*swing_progress)*6, var.charge_l==1, 1 -limb_speed*2 +sin(pi*swing_progress)*6, clamp(-1+limb_speed*3, -1, 0) -sin(pi*swing_progress)*2)                                                                 +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.tz": " -1 +clamp( 1-limb_speed*3,  0, 1) +sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(var.b)/2 -torad(var.hy) +if(var.charge_r==1, -1 +sin(pi*swing_progress)*6, var.charge_l==1, 2               -sin(pi*swing_progress)*6, clamp( 1-limb_speed*3,  0, 1) +sin(pi*swing_progress)*2) +if(!(var.charge_r==1||var.charge_l==1)&&is_riding, -3, 0) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"right_leg.rx": "if(is_riding, right_leg.rx, clamp(torad(-10)+limb_speed  , torad(-10), 0) +(torad(2)+sin(torad( 20)+var.b)/20) +sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) -torad(var.hy)/30 +if(var.charge_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
					"left_leg.rx": " if(is_riding,  left_leg.rx, clamp(torad( 15)-limb_speed  , 0, torad( 15)) +(torad(2)+sin(torad(-20)+var.b)/20) -sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) +torad(var.hy)/30 +if(var.charge_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
					"right_leg.ry": "if(is_riding, right_leg.ry, clamp(torad(  5)-limb_speed  , 0, torad(  5))) +torad( 5)*clamp(limb_speed*1.5, 0, 1) +if(var.charge_r==1, torad( 20)*limb_speed, var.charge_l==1,         0            , 0)",
					"left_leg.ry": " if(is_riding,  left_leg.ry, clamp(torad(-40)+limb_speed*2, torad(-40), 0)) +torad(-5)*clamp(limb_speed*1.5, 0, 1) +if(var.charge_r==1,         0            , var.charge_l==1, torad(-20)*limb_speed, 0)",
					"right_leg.rz": "if(is_riding, right_leg.rz,                                             +torad( 3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(var.charge_r==1, -sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad( 5)*limb_speed, var.charge_l==1, sin(pi*swing_progress)/8 +torad(3)*clamp(limb_speed*1.5, 0, 1)                                   , -sin(pi*swing_progress)/8) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
					"left_leg.rz": " if(is_riding,  left_leg.rz, clamp(torad(-15)+limb_speed, torad(-15), 0) +torad(-3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(var.charge_r==1, -sin(pi*swing_progress)/8 +torad(-3)*clamp(limb_speed*1.5, 0, 1)                                  , var.charge_l==1, sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad(-5)*limb_speed, -sin(pi*swing_progress)/8) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
					"right_leg.tx": "-2                                  +if(is_riding, 0, if(var.charge_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)))                                        +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(var.charge_r==1, clamp( 2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)/4, var.charge_l==1, 0, 0)",
					"left_leg.tx": "  2 +clamp(0.5-limb_speed*2, 0, 0.5) +if(is_riding, 1, if(var.charge_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)) +sin(torad(-20)+var.b)/3) +if(var.charge_r==1||var.charge_l==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(var.charge_r==1, 0, var.charge_l==1, clamp(-2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -1, 6)/4, 0)",
					"right_leg.ty": "0.3 +clamp(12 +clamp( cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) +cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
					"left_leg.ty": " 0.3 +clamp(12 +clamp(-cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) -cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
					"right_leg.tz": "clamp(1 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, +torad(var.hy)/2 -sin(torad( 20)+var.b)/2) +sin(pi*swing_progress)*2 +if(is_riding, 0, var.charge_r==1, clamp(-1+limb_speed*4, -1, 0), var.charge_l==1, clamp(-2+limb_speed*4, -2, 0), clamp(-2  +limb_speed*8, -2  , 0))",
					"left_leg.tz": " clamp(1 -cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, -torad(var.hy)/2 -sin(torad(-20)+var.b)/3) +sin(pi*swing_progress)*2 +if(is_riding, 0, var.charge_r==1, clamp(-1+limb_speed*4, -1, 0), var.charge_l==1,                            0 , clamp(-0.6+limb_speed*2, -0.6, 0))"
				},
				{
					"nose.ty": "     -2 +sin(     pi/2+(var.r+age)) /10*var.sniff",
					"tusks.ty": "    -2 -sin(pi/4+pi/2+(var.r+age)) /10*var.sniff",
					"nose.rx": "  (-0.5 +sin(     pi/3+(var.r+age)))/17*var.sniff",
					"tusks.rx": "-(-0.5 +sin(pi/4+pi/2+(var.r+age)))/17*var.sniff",
					"right_ear2.rx": "torad(-5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) ) ) -torad(head_pitch)/3 +sin(pi*swing_progress*2)/2*if(var.charge_r==1||var.charge_l==1, 1, 0.3) +clamp( if(!is_riding&&age>10, -(head.ry-var.y)*var.fps -(rot_y-var.z)*var.fps, 0), -pi/4, pi/4)",
					"left_ear2.rx": " torad(-5 +20*clamp(limb_speed, 0, 1) +30*clamp( (  sin(       pi/4 +(var.r+age/1.2)/2 ) +sin(       (var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) ) ) -torad(head_pitch)/3 +sin(pi*swing_progress*2)/2*if(var.charge_r==1||var.charge_l==1, 1, 0.3) +clamp( if(!is_riding&&age>10,  (head.ry-var.y)*var.fps +(rot_y-var.z)*var.fps, 0), -pi/4, pi/4)",
					"right_ear2.ry": "torad(8)",
					"left_ear2.ry": "-torad(8)",
					"right_ear2.rz": "clamp(torad( 20 +45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Rear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) )  ) +cos(var.b)/16 -sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) +sin(pi*swing_progress*2)*if(var.charge_r==1||var.charge_l==1, 1, 0.5) +clamp( if(!is_riding&&age>10, -(head.ry-var.y)*var.fps -(rot_y-var.z)*var.fps/1.5, 0) +if(age>10&&var.y!=pos_y, -(pos_y-var.x)*var.fps*2, 0), -torad(17), pi/2), 0,  pi)",
					"left_ear2.rz": " clamp(torad(-20 -45*clamp( (  sin(-pi/8 +pi/4 +(var.r+age/1.2)/2 ) +sin(-pi/8 +(var.r+age/1.2) )  ) *var.Lear -1 , 0 , if(var.charge_r==1||var.charge_l==1, 0, 1) )  ) -cos(var.b)/16 +sin(var.ls*2)/5*limb_speed +if(limb_speed>=0.6, -sin(var.ls)/4*limb_speed, 0) -sin(pi*swing_progress*2)*if(var.charge_r==1||var.charge_l==1, 1, 0.5) +clamp( if(!is_riding&&age>10, -(head.ry-var.y)*var.fps -(rot_y-var.z)*var.fps/1.5, 0) +if(age>10&&var.y!=pos_y,  (pos_y-var.x)*var.fps*2, 0), -pi/2, torad(17)), -pi, 0)",
					"right_eye.sx": "1+clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/4",
					"left_eye.sx": "right_eye.sx",
					"right_eye.sy": "1-clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)/1.1/2",
					"left_eye.sy": "right_eye.sy",
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2.5)",
					"left_eye.sz": "right_eye.sz",
					"right_eyelid.tz": "0",
					"left_eyelid.tz": "0",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": " clamp((1.5 -abs(sin(var.r+age/7)*6))*clamp(-32 +cos((var.r+age/7)/1.5)*40 +cos((var.r+age/7)/4)*40, 0, 1), 0, 1)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"left_eyelid.sz": " if( left_eyelid.sy==0|| left_blink.sy==0, 0, 1)"
				},
				{
					"var.x": "var.x2",
					"var.x2": "var.x3",
					"var.x3": "var.x4",
					"var.x4": "var.x5",
					"var.x5": "pos_y",
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "var.y4",
					"var.y4": "var.y5",
					"var.y5": "var.y6",
					"var.y6": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "var.z4",
					"var.z4": "var.z5",
					"var.z5": "var.z6",
					"var.z6": "rot_y"
				},
				{
					"right_arm.tx": "-999999",
					"right_arm2.rx": "right_arm.rx",
					"right_arm2.ry": "right_arm.ry",
					"right_arm2.rz": "right_arm.rz",
					"r_arm.rx": "-body.rx",
					"r_arm.ry": "-body.ry"
				}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0.25],
			"submodels": [
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"boxes": [
						{"coordinates": [-6, -1, -9, 12, 9, 8], "textureOffset": [46, 22]}
					],
					"submodels": [
						{
							"id": "helmet",
							"invertAxis": "xy",
							"translate": [1, -25, -5],
							"boxes": [
								{"coordinates": [-7, 24, -4, 12, 9, 8], "textureOffset": [0, 82], "sizeAdd": 0.25},
								{"coordinates": [-2, 28, -7, 2, 7, 12], "textureOffset": [90, 8]}
							],
							"submodels": [
								{
									"id": "feather1",
									"invertAxis": "xy",
									"translate": [-1, 34, -1],
									"boxes": [
										{"coordinates": [0, -1, -2, 0, 10, 4], "textureOffset": [106, -4]}
									]
								},
								{
									"id": "feather2",
									"invertAxis": "xy",
									"translate": [-1, 34, 2],
									"rotate": [15, 0, 0],
									"boxes": [
										{"coordinates": [0, -1, -2, 0, 10, 4], "textureOffset": [106, -4]}
									]
								},
								{
									"id": "feather3",
									"invertAxis": "xy",
									"translate": [-1, 33, 4],
									"rotate": [40, 0, 0],
									"boxes": [
										{"coordinates": [0, -2, -2, 0, 10, 4], "textureOffset": [106, -4]}
									]
								}
							]
						},
						{
							"id": "left_ear2",
							"invertAxis": "xy",
							"translate": [-5, 5.5, -0.5],
							"boxes": [
								{"coordinates": [-1.5, -5.5, -6.5, 1, 5, 4], "textureOffset": [0, 30]}
							]
						},
						{
							"id": "right_ear2",
							"invertAxis": "xy",
							"translate": [5, 5.5, -0.5],
							"boxes": [
								{"coordinates": [0.5, -5.5, -6.5, 1, 5, 4], "textureOffset": [0, 0]}
							]
						},
						{
							"id": "nose",
							"invertAxis": "xy",
							"translate": [0, 2, -4],
							"boxes": [
								{"coordinates": [-3, -3, -7, 6, 4, 2], "textureOffset": [42, 0]}
							]
						},
						{
							"id": "tusks",
							"invertAxis": "xy",
							"translate": [0, 2, -4],
							"boxes": [
								{"coordinates": [-5, -3, -8, 2, 2, 3], "textureOffset": [54, 39]},
								{"coordinates": [3, -3, -8, 2, 2, 3], "textureOffset": [42, 6]},
								{"coordinates": [1, -4, -8, 2, 4, 3], "textureOffset": [118, 0]},
								{"coordinates": [-2, -4, -8, 2, 4, 3], "textureOffset": [118, 0]},
								{"coordinates": [-5, -4, -7, 2, 4, 3], "textureOffset": [118, 0]}
							]
						},
						{
							"id": "left_eye",
							"invertAxis": "xy",
							"translate": [-3.25, 3.25, -9],
							"boxes": [
								{
									"coordinates": [-0.75, -0.25, -0.03, 1, 1, 0.25],
									"uvNorth": [44, 31, 45, 32],
									"uvEast": [44, 31, 45, 32],
									"uvSouth": [44, 31, 45, 32],
									"uvWest": [44, 31, 45, 32],
									"uvUp": [44, 31, 45, 32],
									"uvDown": [44, 31, 45, 32]
								}
							],
							"submodels": [
								{
									"id": "left_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0.25, -0.25, 1],
									"submodels": [
										{
											"id": "left_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [-1, -1.015, -0.03, 1, 1, 0.25],
													"uvNorth": [45, 31, 46, 32],
													"uvEast": [45, 31, 46, 32],
													"uvSouth": [45, 31, 46, 32],
													"uvWest": [45, 31, 46, 32],
													"uvUp": [45, 31, 46, 32],
													"uvDown": [45, 31, 46, 32],
													"sizeAdd": 0.02
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye",
							"invertAxis": "xy",
							"translate": [3.25, 3.25, -9],
							"boxes": [
								{
									"coordinates": [-0.25, -0.25, -0.03, 1, 1, 0.25],
									"uvNorth": [42, 31, 43, 32],
									"uvEast": [42, 31, 43, 32],
									"uvSouth": [42, 31, 43, 32],
									"uvWest": [42, 31, 43, 32],
									"uvUp": [42, 31, 43, 32],
									"uvDown": [42, 31, 43, 32]
								}
							],
							"submodels": [
								{
									"id": "right_eyelid",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.25, -0.25, 1],
									"submodels": [
										{
											"id": "right_blink",
											"invertAxis": "xy",
											"translate": [0, 1.015, 0],
											"boxes": [
												{
													"coordinates": [0, -1.015, -0.03, 1, 1, 0.25],
													"uvNorth": [43, 31, 44, 32],
													"uvEast": [43, 31, 44, 32],
													"uvSouth": [43, 31, 44, 32],
													"uvWest": [43, 31, 44, 32],
													"uvUp": [43, 31, 44, 32],
													"uvDown": [43, 31, 44, 32],
													"sizeAdd": 0.02
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-7.5, 10, -6, 15, 15, 12], "textureOffset": [0, 30]}
			],
			"submodels": [
				{
					"id": "jacket2",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"boxes": [
						{"coordinates": [-7.5, -17, -6, 15, 18, 12], "textureOffset": [0, 0], "sizeAdd": 0.25}
					]
				},
				{
					"id": "r_arm",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"submodels": [
						{
							"id": "right_arm2",
							"invertAxis": "xy",
							"translate": [5, -2, 0],
							"boxes": [
								{"coordinates": [2.5, -16, -3, 6, 19, 6], "textureOffset": [24, 57]},
								{"coordinates": [2.5, -16, -3, 6, 19, 6], "textureOffset": [48, 51], "sizeAdd": 0.25}
							],
							"submodels": [
								{
									"id": "axe",
									"invertAxis": "xy",
									"translate": [5, -13.4, -7],
									"rotate": [-90, -45, -90],
									"boxes": [
										{
											"coordinates": [10.5, -12.6, -0.5, 2, 2, 1],
											"uvNorth": [105, 125, 107, 127],
											"uvEast": [105, 125, 106, 127],
											"uvSouth": [107, 125, 105, 127],
											"uvWest": [106, 125, 107, 127],
											"uvUp": [107, 126, 105, 125],
											"uvDown": [107, 126, 105, 127]
										},
										{
											"coordinates": [7.5, -11.6, -0.5, 4, 4, 1],
											"uvNorth": [106, 122, 110, 126],
											"uvEast": [106, 122, 107, 126],
											"uvSouth": [110, 122, 106, 126],
											"uvWest": [109, 122, 110, 126],
											"uvUp": [110, 123, 106, 122],
											"uvDown": [110, 125, 106, 126]
										},
										{
											"coordinates": [6.5, -8.6, -0.5, 2, 2, 1],
											"uvNorth": [109, 121, 111, 123],
											"uvEast": [109, 121, 110, 123],
											"uvSouth": [111, 121, 109, 123],
											"uvWest": [110, 121, 111, 123],
											"uvUp": [111, 122, 109, 121],
											"uvDown": [111, 122, 109, 123]
										},
										{
											"coordinates": [5.5, -7.6, -0.5, 2, 2, 1],
											"uvNorth": [110, 120, 112, 122],
											"uvEast": [110, 120, 111, 122],
											"uvSouth": [112, 120, 110, 122],
											"uvWest": [111, 120, 112, 122],
											"uvUp": [112, 121, 110, 120],
											"uvDown": [112, 121, 110, 122]
										},
										{
											"coordinates": [4.5, -6.6, -0.5, 2, 2, 1],
											"uvNorth": [111, 119, 113, 121],
											"uvEast": [111, 119, 112, 121],
											"uvSouth": [113, 119, 111, 121],
											"uvWest": [112, 119, 113, 121],
											"uvUp": [113, 120, 111, 119],
											"uvDown": [113, 120, 111, 121]
										},
										{
											"coordinates": [3.5, -5.6, -0.5, 2, 2, 1],
											"uvNorth": [112, 118, 114, 120],
											"uvEast": [112, 118, 113, 120],
											"uvSouth": [114, 118, 112, 120],
											"uvWest": [113, 118, 114, 120],
											"uvUp": [114, 119, 112, 118],
											"uvDown": [114, 119, 112, 120]
										},
										{
											"coordinates": [2.5, -4.6, -0.5, 2, 2, 1],
											"uvNorth": [113, 117, 115, 119],
											"uvEast": [113, 117, 114, 119],
											"uvSouth": [115, 117, 113, 119],
											"uvWest": [114, 117, 115, 119],
											"uvUp": [115, 118, 113, 117],
											"uvDown": [115, 118, 113, 119]
										},
										{
											"coordinates": [1.5, -3.6, -0.5, 2, 2, 1],
											"uvNorth": [114, 116, 116, 118],
											"uvEast": [114, 116, 115, 118],
											"uvSouth": [116, 116, 114, 118],
											"uvWest": [115, 116, 116, 118],
											"uvUp": [116, 117, 114, 116],
											"uvDown": [116, 117, 114, 118]
										},
										{
											"coordinates": [0.5, -2.6, -0.5, 2, 2, 1],
											"uvNorth": [115, 115, 117, 117],
											"uvEast": [115, 115, 116, 117],
											"uvSouth": [117, 115, 115, 117],
											"uvWest": [116, 115, 117, 117],
											"uvUp": [117, 116, 115, 115],
											"uvDown": [117, 116, 115, 117]
										},
										{
											"coordinates": [-0.5, -1.6, -0.5, 2, 2, 1],
											"uvNorth": [116, 114, 118, 116],
											"uvEast": [116, 114, 117, 116],
											"uvSouth": [118, 114, 116, 116],
											"uvWest": [117, 114, 118, 116],
											"uvUp": [118, 115, 116, 114],
											"uvDown": [118, 115, 116, 116]
										},
										{
											"coordinates": [-1.5, -0.6, -0.5, 2, 2, 1],
											"uvNorth": [117, 113, 119, 115],
											"uvEast": [117, 113, 118, 115],
											"uvSouth": [119, 113, 117, 115],
											"uvWest": [118, 113, 119, 115],
											"uvUp": [119, 114, 117, 113],
											"uvDown": [119, 114, 117, 115]
										},
										{
											"coordinates": [-2.5, 0.4, -0.5, 2, 2, 1],
											"uvNorth": [118, 112, 120, 114],
											"uvEast": [118, 112, 119, 114],
											"uvSouth": [120, 112, 118, 114],
											"uvWest": [119, 112, 120, 114],
											"uvUp": [120, 113, 118, 112],
											"uvDown": [120, 113, 118, 114]
										},
										{
											"coordinates": [-1.5, 2.4, -0.5, 1, 1, 1],
											"uvNorth": [118, 111, 119, 112],
											"uvEast": [118, 111, 119, 112],
											"uvSouth": [119, 111, 118, 112],
											"uvWest": [118, 111, 119, 112],
											"uvUp": [120, 113, 118, 112],
											"uvDown": [120, 113, 118, 114]
										},
										{
											"coordinates": [-6.5, 1.4, -0.5, 5, 6, 1],
											"uvNorth": [119, 107, 124, 113],
											"uvEast": [119, 107, 120, 113],
											"uvSouth": [124, 107, 119, 113],
											"uvWest": [123, 107, 124, 113],
											"uvUp": [124, 108, 119, 107],
											"uvDown": [124, 112, 119, 113]
										},
										{
											"coordinates": [-7.5, 4.4, -0.5, 2, 4, 1],
											"uvNorth": [123, 106, 125, 110],
											"uvEast": [123, 106, 124, 110],
											"uvSouth": [125, 106, 123, 110],
											"uvWest": [124, 106, 125, 110],
											"uvUp": [125, 107, 123, 106],
											"uvDown": [125, 109, 123, 110]
										},
										{
											"coordinates": [-8.5, 5.4, -0.5, 1, 4, 1],
											"uvNorth": [125, 105, 126, 109],
											"uvEast": [125, 105, 126, 109],
											"uvSouth": [126, 105, 125, 109],
											"uvWest": [125, 105, 126, 109],
											"uvUp": [126, 106, 125, 105],
											"uvDown": [126, 108, 125, 109]
										},
										{
											"coordinates": [-9.5, 6.4, -0.5, 1, 3, 1],
											"uvNorth": [126, 105, 127, 108],
											"uvEast": [125, 105, 126, 108],
											"uvSouth": [127, 105, 126, 108],
											"uvWest": [126, 105, 127, 108],
											"uvUp": [127, 106, 126, 105],
											"uvDown": [127, 107, 126, 108]
										},
										{
											"coordinates": [-4.5, 7.4, -0.5, 5, 4, 1],
											"uvNorth": [117, 103, 122, 107],
											"uvEast": [117, 103, 118, 107],
											"uvSouth": [122, 103, 117, 107],
											"uvWest": [121, 103, 122, 107],
											"uvUp": [122, 104, 117, 103],
											"uvDown": [122, 106, 117, 107]
										},
										{
											"coordinates": [-1.5, 4.4, -0.5, 5, 4, 1],
											"uvNorth": [114, 106, 119, 110],
											"uvEast": [114, 106, 115, 110],
											"uvSouth": [119, 106, 114, 110],
											"uvWest": [119, 106, 120, 110],
											"uvUp": [119, 107, 114, 106],
											"uvDown": [124, 105, 119, 106]
										},
										{
											"coordinates": [-1.5, 3.4, -0.5, 5, 1, 1],
											"uvNorth": [114, 110, 119, 111],
											"uvEast": [114, 110, 115, 111],
											"uvSouth": [119, 110, 114, 111],
											"uvWest": [119, 110, 120, 111],
											"uvUp": [119, 110, 114, 109],
											"uvDown": [119, 110, 114, 111]
										},
										{
											"coordinates": [0.5, 2.4, -0.5, 4, 1, 1],
											"uvNorth": [113, 111, 117, 112],
											"uvEast": [113, 111, 114, 112],
											"uvSouth": [117, 111, 113, 112],
											"uvWest": [116, 111, 117, 112],
											"uvUp": [117, 112, 113, 111],
											"uvDown": [117, 111, 113, 112]
										},
										{
											"coordinates": [1.5, 1.4, -0.5, 3, 1, 1],
											"uvNorth": [113, 112, 116, 113],
											"uvEast": [113, 112, 114, 113],
											"uvSouth": [116, 112, 113, 113],
											"uvWest": [115, 112, 116, 113],
											"uvUp": [116, 112, 113, 111],
											"uvDown": [116, 112, 113, 113]
										},
										{
											"coordinates": [0.5, 8.4, -0.5, 1, 2, 1],
											"uvNorth": [116, 104, 117, 106],
											"uvEast": [116, 104, 117, 106],
											"uvSouth": [117, 104, 116, 106],
											"uvWest": [117, 104, 118, 106],
											"uvUp": [117, 105, 116, 104],
											"uvDown": [118, 103, 117, 104]
										},
										{
											"coordinates": [1.5, 8.4, -0.5, 1, 1, 1],
											"uvNorth": [115, 105, 116, 106],
											"uvEast": [115, 105, 116, 106],
											"uvSouth": [116, 105, 115, 106],
											"uvWest": [116, 105, 117, 106],
											"uvUp": [116, 106, 115, 105],
											"uvDown": [117, 104, 116, 105]
										},
										{
											"coordinates": [-5.5, 8.4, -0.5, 1, 3, 1],
											"uvNorth": [122, 103, 123, 106],
											"uvEast": [121, 103, 122, 106],
											"uvSouth": [123, 103, 122, 106],
											"uvWest": [122, 103, 123, 106],
											"uvUp": [123, 104, 122, 103],
											"uvDown": [123, 105, 122, 106]
										},
										{
											"coordinates": [-7.5, -1.6, -0.5, 1, 5, 1],
											"uvNorth": [124, 111, 125, 116],
											"uvEast": [123, 111, 124, 116],
											"uvSouth": [125, 111, 124, 116],
											"uvWest": [124, 111, 125, 116],
											"uvUp": [125, 112, 124, 111],
											"uvDown": [125, 115, 124, 116]
										},
										{
											"coordinates": [-6.5, -1.6, -0.5, 1, 3, 1],
											"uvNorth": [123, 113, 124, 116],
											"uvEast": [123, 113, 124, 116],
											"uvSouth": [124, 113, 123, 116],
											"uvWest": [124, 113, 125, 116],
											"uvUp": [124, 113, 123, 112],
											"uvDown": [124, 115, 123, 116]
										},
										{
											"coordinates": [-8.5, -1.6, -0.5, 1, 4, 1],
											"uvNorth": [125, 112, 126, 116],
											"uvEast": [124, 112, 125, 116],
											"uvSouth": [126, 112, 125, 116],
											"uvWest": [125, 112, 126, 116],
											"uvUp": [126, 113, 125, 112],
											"uvDown": [126, 115, 125, 116]
										},
										{
											"coordinates": [-5.5, -0.6, -0.5, 1, 1, 1],
											"uvNorth": [122, 114, 123, 115],
											"uvEast": [122, 114, 123, 115],
											"uvSouth": [123, 114, 122, 115],
											"uvWest": [123, 114, 124, 115],
											"uvUp": [123, 115, 122, 114],
											"uvDown": [123, 114, 122, 115]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{"coordinates": [-13.5, 6, -3, 6, 19, 6], "textureOffset": [66, 70]},
				{"coordinates": [-13.5, 6, -3, 6, 19, 6], "textureOffset": [0, 57], "sizeAdd": 0.25}
			],
			"submodels": [
				{
					"id": "bandage",
					"invertAxis": "xy",
					"translate": [-13.5, 17, 0],
					"rotate": [0, 0, -20],
					"boxes": [
						{"coordinates": [0, -4, -1, 0, 4, 2], "textureOffset": [114, -2]}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-7, 0, -2.5, 6, 14, 6], "textureOffset": [78, 0]},
				{"coordinates": [-7, 0, -2.5, 6, 14, 6], "textureOffset": [72, 39], "sizeAdd": 0.25}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [1, 0, -2.5, 6, 14, 6], "textureOffset": [42, 76]},
				{"coordinates": [1, 0, -2.5, 6, 14, 6], "textureOffset": [54, 0], "sizeAdd": 0.25}
			]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}